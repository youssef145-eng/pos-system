#include <webots/robot.h>
#include <webots/motor.h>
#include <webots/distance_sensor.h>
#include <stdio.h>
#include <stdbool.h>

#define TIME_STEP 64
#define MAX_SPEED 6.28
#define NUM_SENSORS 8
#define THRESHOLD 80.0  // قيمة تقريبية لاكتشاف الحائط
#define SAFE_DISTANCE 150.0 // المسافة الآمنة (كلما كانت أكبر، كلما كانت المسافة الآمنة أكبر)

int main() {
  wb_robot_init();

  // تهيئة الموتورات
  WbDeviceTag left_motor = wb_robot_get_device("left wheel motor");
  WbDeviceTag right_motor = wb_robot_get_device("right wheel motor");

  wb_motor_set_position(left_motor, INFINITY);
  wb_motor_set_position(right_motor, INFINITY);
  wb_motor_set_velocity(left_motor, 0.0);
  wb_motor_set_velocity(right_motor, 0.0);

  // تهيئة الحساسات
  WbDeviceTag sensors[NUM_SENSORS];
  char sensor_names[NUM_SENSORS][5] = {
    "ps0", "ps1", "ps2", "ps3",
    "ps4", "ps5", "ps6", "ps7"
  };

  for (int i = 0; i < NUM_SENSORS; i++) {
    sensors[i] = wb_robot_get_device(sensor_names[i]);
    wb_distance_sensor_enable(sensors[i], TIME_STEP);
  }

  while (wb_robot_step(TIME_STEP) != -1) {
    // قراءة القيم
    double sensor_values[NUM_SENSORS];
    for (int i = 0; i < NUM_SENSORS; i++) {
      sensor_values[i] = wb_distance_sensor_get_value(sensors[i]);
      printf("Sensor %d: %f\n", i, sensor_values[i]);
    }

    // المنطق الأساسي بناءً على الحساسات
    bool left_wall = sensor_values[5] > THRESHOLD;
    bool front_wall = sensor_values[7] > THRESHOLD;
    bool right_wall = sensor_values[2] > THRESHOLD;

    double left_speed = MAX_SPEED;
    double right_speed = MAX_SPEED;

    // إذا كانت الحساسات الأمامية تشير إلى اقتراب من الجدار
    if (sensor_values[7] > SAFE_DISTANCE) {
      printf("Too close to the front wall, stop or reverse\n");
      left_speed = -MAX_SPEED / 2;  // التراجع للخلف
      right_speed = -MAX_SPEED / 2;  // التراجع للخلف
    } 
    // إذا كان هناك جدار من أي اتجاه، نتوقف
    else if (left_wall || front_wall || right_wall) {
      printf("Wall detected, stopping\n");
      left_speed = 0.0;  // التوقف
      right_speed = 0.0;  // التوقف
    } 
    // إذا لم يكن هناك جدران، نتحرك للأمام
    else {
      printf("No walls detected, moving forward\n");
      left_speed = MAX_SPEED;
      right_speed = MAX_SPEED;
    }

    // تنفيذ السرعات
    wb_motor_set_velocity(left_motor, left_speed);
    wb_motor_set_velocity(right_motor, right_speed);
  }

  wb_robot_cleanup();
  return 0;
} 